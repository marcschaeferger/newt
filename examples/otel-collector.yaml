receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

processors:
  memory_limiter:
    check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage: 25
  resourcedetection:
    detectors: [env, host]
    timeout: 5s
  batch: {}
  transform/promote:
    # optional, damit fehlende Keys nicht die Pipeline abbrechen:
    error_mode: ignore
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["service_instance_id"], resource.attributes["service.instance.id"]) where IsSet(resource.attributes["service.instance.id"])
          - set(attributes["site_id"], resource.attributes["site_id"]) where IsSet(resource.attributes["site_id"])

exporters:
  prometheus:
    endpoint: 0.0.0.0:8889
    send_timestamps: true
  # Falls du kein Remote-Write-Ziel hast, kommentiere es aus:
  # prometheusremotewrite:
  #   endpoint: http://mimir:9009/api/v1/push
  debug:
    verbosity: basic

service:
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, transform/promote, batch]
      exporters: [prometheus] # , prometheusremotewrite
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [debug]
